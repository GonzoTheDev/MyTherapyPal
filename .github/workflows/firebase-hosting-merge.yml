# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Deploy to Firebase Hosting on merge 
'on':
  push:
    branches:
      - main
jobs:
  test_flutter:
    name: Unit & Widget Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v1
        with:
          channel: 'master'
      - run: flutter pub get
      - run: flutter test
  build_web:
    if: false
    name: Build Flutter (Web)
    needs: test_flutter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v1
        with:
            channel: 'master'
      - run: flutter clean
      - run: flutter upgrade
      - run: flutter pub get
      - run: flutter pub upgrade
      - run: flutter config --enable-web
      - run: flutter build web --web-renderer canvaskit --release
      - name: Archive Production Artifact
        uses: actions/upload-artifact@master
        with:
          name: web-build
          path: build/web
  deploy_web:
    if: false
    name: Deploy Web to Firebase Hosting
    needs: build_web
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@master
      - name: Download Artifact
        uses: actions/download-artifact@master
        with:
          name: web-build
          path: build/web
      - name: Deploy to Firebase
        uses: w9jds/firebase-action@v13.4.0
        with:
          args: deploy --only hosting --public build/web
        env:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          channelId: live
          projectId: mytherapypal
  build_apk:
    if: false
    name: Build Flutter (Android)
    needs: test_flutter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"
        env:
          KEY_JKS: ${{secrets.RELEASE_KEYSTORE}}
          SIGNING_KEY_ALIAS: ${{secrets.ALIAS}}
          SIGNING_KEY_PASSWORD: ${{secrets.ALIAS_PASSWORD}}
          SIGNING_STORE_PASSWORD: ${{secrets.KEY_PASSWORD}}
      - name: Decode Keystore
        run: |
          echo "${{secrets.RELEASE_KEYSTORE}}" > release.keystore.asc
          gpg --batch --passphrase "${{secrets.RELEASE_KEYSTORE_PASSPHRASE}}" -d release.keystore.asc > android/key.jks
      - name: Create key.properties
        run: |
          touch android/key.properties
          echo "storePassword=${{secrets.KEY_PASSWORD}}
          keyPassword=${{secrets.ALIAS_PASSWORD}}
          keyAlias=${{secrets.ALIAS}}
          storeFile=../key.jks"  > ./android/key.properties
      - name: Get dependencies
        run: flutter pub get
      - name: Build APK
        run: flutter build apk
      - uses: actions/upload-artifact@v2      
        with:        
          name: release-apk        
          path: build/app/outputs/apk/release/app-release.apk
  beta_apk:
    if: false
    name: Upload Android Beta to Firebase App Distribution
    needs: [build_apk]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: release-apk
      - name: Upload APK
        uses: wzieba/Firebase-Distribution-Github-Action@v1.7.0
        with:
          appId: ${{secrets.FIREBASE_ANDROID_APPID}}
          token: ${{secrets.FIREBASE_TOKEN}}
          file: app-release.apk
  build_ios:
    if: false
    name: Build Flutter (iOS)
    needs: test_flutter
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-java@v1
      with:
        java-version: '12.x'
    - uses: subosito/flutter-action@v1
      with:
          channel: 'stable'
    - run: flutter clean
    - run: flutter upgrade
    - run: flutter pub get
    - run: flutter pub upgrade
    - run: flutter build ios --release --no-codesign
    - name: Package IPA
      run: |
        mkdir Payload
        cp -r build/ios/iphoneos/Runner.app Payload/Runner.app
        zip -r Runner.ipa Payload
      working-directory: .
    - name: Upload iPA
      uses: actions/upload-artifact@v2 
      with:
        name: ios-build
        path: Runner.ipa
  beta_ios:
    # Job disabled until apple developer account is available
    if: false
    name: Upload iOS Beta to Firebase App Distribution
    needs: [build_ios]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Download Artifact
      uses: actions/download-artifact@v2
      with:
        name: ios-build
    - name: Upload IPA
      uses: wzieba/Firebase-Distribution-Github-Action@v1.7.0
      with:
        appId: ${{secrets.FIREBASE_IOS_APPID}}
        token: ${{secrets.FIREBASE_TOKEN}}
        file: Runner.ipa
  build_macos:
    if: true
    name: Build Flutter (macOS)
    needs: test_flutter
    runs-on: macOS-latest
    env:
      MACOS_APP_RELEASE_PATH: build/macos/Build/Products/Release
    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
      - run: flutter clean
      - run: flutter upgrade
      - run: flutter pub get
      - run: flutter pub upgrade
      - run: flutter config --enable-macos-desktop
      - run: flutter build macos --release 
      - name: Create DMG
        run: |
          echo "Install create-dmg"
          brew install create-dmg
          if [ -d "${{ env.MACOS_APP_RELEASE_PATH }}" ]; then
            cd "${{ env.MACOS_APP_RELEASE_PATH }}"
            create-dmg \
              --volname "MyTherapyPal" \
              --window-pos 200 120 \
              --window-size 800 529 \
              --icon-size 130 \
              --text-size 14 \
              --icon "MyTherapyPal.app" 260 250 \
              --hide-extension "MyTherapyPal.app" \
              --app-drop-link 540 250 \
              --hdiutil-quiet \
              "MyTherapyPal.dmg" \
              "MyTherapyPal.app"
          else
            echo "Directory ${$MACOS_APP_RELEASE_PATH} does not exist."
            exit 1
          fi
        env:
          MACOS_APP_RELEASE_PATH: ${{ env.MACOS_APP_RELEASE_PATH }}
  beta_macos:
    # Job disabled until apple developer account is available
    if: false
    name: Upload macOS Beta to Firebase App Distribution
    needs: [build_macos]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Download Artifact
      uses: actions/download-artifact@v2
      with:
        name: macos-build
    - name: Upload DMG
      uses: wzieba/Firebase-Distribution-Github-Action@v1.7.0
      with:
        appId: ${{secrets.FIREBASE_MACOS_APPID}}
        token: ${{secrets.FIREBASE_TOKEN}}
        file: MyTherapyPal.dmg